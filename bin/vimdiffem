#!/bin/bash

##
## Loads up files with differences between working directory and index, or files
## with conflicts.
##

#
# Default Actions
#

# Command to run for diffing
gdiff_cmd="Gdiff"

# How to filter status output to get filenames.
# Get files modified in the work tree by default.
awk_cmd='/^.M/ { print $2 }'

main () {
    gitstatfile=$(mktemp)
    vimscriptdir=$(mktemp -d)
    vimscript=$vimscriptdir/xx00
    trap "rm -rf $gitstatfile $vimscriptdir" EXIT

    git status -s > $gitstatfile || {
        2>&1 echo "No git repo here."
        exit 1
    }

    (cd $vimscriptdir; csplit -s $0 %--\%--\%--%+1)

    # Conflict statuses:
    #
    # DD    unmerged, both deleted
    # AU    unmerged, added by us
    # UD    unmerged, deleted by them
    # UA    unmerged, added by them
    # DU    unmerged, deleted by us
    # AA    unmerged, both added
    # UU    unmerged, both modified

    if grep -q '^[DAU][DAU]' $gitstatfile; then
        cat <<EOF
Loading up files with conflicts!
(Ignoring files deleted both by us and them.)
EOF
        awk_cmd='/^U|^.U|^AA/ { print $2 }'
    elif [[ "$@" = "--cached" ]]; then
        echo "Comparing index to HEAD"
        shift
        awk_cmd='/^M/ { print $2 }'
        # HEAD | Index | Working
        gdiff_cmd=${gdiff_cmd}\ HEAD\ \|${gdiff_cmd}
    elif grep -q '^.M' $gitstatfile; then
        echo "Comparing working tree to index"
    else
        echo "No changes!"
        return
    fi
    sleep 1
    vim --cmd "let gdiff_cmd = '$gdiff_cmd'" \
        --cmd "source $vimscript" \
        "+$gdiff_cmd" \
        $(awk "$awk_cmd" $gitstatfile)

    echo -e "\nNew results:\n"
    git status

}

main $@
exit 0
# vim script from here!
# --%--%--

fu s:go(where)
    only
    exec a:where
    exec g:gdiff_cmd
endf

command! Go  call s:go("next")
command! Gon call s:go("next")
command! Gop call s:go("prev")
command! Gor call s:go("rew")
command! Gol call s:go("last")
