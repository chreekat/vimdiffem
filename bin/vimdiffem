#!/bin/bash

theOther=
mergebase=

execVim () {
    mbcmd=
    movewin=
    if [ -n "$mergebase" ]
    then
        mbcmd="com Gomb :Gdiff ${mergebase}"
        movewin="|wincmd J"
    fi
    exec vim $@ \
        -c "com God :Gdiff ${theOther}${movewin}" \
        -c "com Go only|next|God" \
        -c "com Goprev only|prev|God" \
        -c "com Gorewind only|rewind|God" \
        -c "$mbcmd" \
        +God
}

# With no args, compare against the index.
if [ -z "$1" ]
then
    # But, if there is a busted merge, compare those instead!
    if (git status -s | grep '^U\|^.U')
    then
        # I don't know that ORIG_HEAD is the right one here for rebases...?
        # MERGE_HEAD is obviously correct for merges, though...
        if git rev-parse MERGE_HEAD >/dev/null 2>&1
        then
            mergebase=$(git merge-base HEAD MERGE_HEAD)
        elif git rev-parse CHERRY_PICK_HEAD >/dev/null 2>&1
        then
            mergebase=$(git merge-base HEAD CHERRY_PICK_HEAD)
        else
            mergebase=$(git merge-base HEAD ORIG_HEAD)
        fi
        diffables=$(git status -s | awk '/^U|^.U/ { print $2 }')
    else
        diffables=$(git diff --name-only)
    fi
# Otherwise, compare against the given argument.
else
    theOther=$1
    diffables=$(git diff --name-only $1)
fi

if git diff --quiet $theOther
then
    2>&1 echo "Ain't no thing to be diffin"
else
    execVim $diffables
fi
